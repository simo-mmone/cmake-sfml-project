name: CI

on: [create]

jobs:
  build:
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:
        # - { name: Windows VS2019, os: windows-2019  }
        - { name: Windows VS2022, os: windows-2022  }
        - { name: Linux GCC,      os: ubuntu-latest }
        # - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
        # - { name: macOS,          os: macos-latest  }
        # - { name: macOS M1,       os: macos-11  }
        config:
        # - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
        - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev

    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure
      shell: bash
      run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=install ${{matrix.platform.flags}} ${{matrix.config.flags}}

    - name: Build
      shell: bash
      run: cmake --build build --config Release -j $(sysctl -n hw.logicalcpu)

    - name: Install
      shell: bash
      run: cmake --install build --config Release

    - name: Zip build artifacts
      run: |
        cd build
        zip -r ${{ matrix.platform.name }}-${{ matrix.config.name }}-bin.zip bin
        mv ${{ matrix.platform.name }}-${{ matrix.config.name }}-bin.zip ../
        cd ..

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.platform.name }}-${{ matrix.config.name }}-bin.zip
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: ${{ github.ref }}
        draft: false
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}